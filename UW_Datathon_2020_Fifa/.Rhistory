install_github('araastat/reprtree')
}
for(p in c(cran.packages, 'reprtree')) eval(substitute(library(pkg), list(pkg=p)))
installR()
install.packages("installr")
library(installr)
updateR()
install.packages("devtools")
library(devtools)
devtools::install_github('skinner927/reprtree')
install.packages("devtools")
library(reprtree)
library(hdm) #lasso, logit
library(glmnet) #cv
library(nnet) #rnn
library(pscl) #multinomial
library(caret) #confusion matrix
library(dplyr)
library(gbm) #boosting
library(randomForest) #random forest
library(reprtree) #plot decision tree
library(car) #fit dists
library(fitdistrplus) #fit dists
library(tidyverse) #cleaning
library(lubridate)
library(reshape2)
temp15 <- read.csv("players_15.csv", header = T)
temp16 <- read.csv("players_16.csv", header = T)
temp17 <- read.csv("players_17.csv", header = T)
temp18 <- read.csv("players_18.csv", header = T)
temp19 <- read.csv("players_19.csv", header = T)
temp20 <- read.csv("players_20.csv", header = T)
templeague <- read.csv("teams_and_leagues.csv", header = T)
#rm(list = ls())
setwd("C:/Users/slexi/Downloads/fifa-20-complete-player-dataset")
temp15 <- read.csv("players_15.csv", header = T)
temp16 <- read.csv("players_16.csv", header = T)
temp17 <- read.csv("players_17.csv", header = T)
temp18 <- read.csv("players_18.csv", header = T)
temp19 <- read.csv("players_19.csv", header = T)
temp20 <- read.csv("players_20.csv", header = T)
templeague <- read.csv("teams_and_leagues.csv", header = T)
names(temp15)
is.na(temp15)
sum(is.na(temp15))
names(temp15)=="gk_diving"
ncol(names(temp15)=="gk_diving")
which(names(temp15)=="gk_diving")
which(names(temp15)=="ls")
temp15[,-(79:100)]
temp15 <- temp15[,-(79:100)]
temp20
is.na(temp20)
which(names(temp20)=="ls")
temp20 <- temp20[,-(79:100)]
which(names(temp20)=="loaned_from")
which(names(temp20)=="team_jersey_number")
which(names(temp20)=="nation_jersey_number")
temp20 <- temp20[,-(2,26,27,31)]
tempclub <- read.csv("club_id.csv", header = T)
?join
?join
?merge
?match
unique(temp20$club)
names(tempclub)
unique(tempclub$selection1_name)
temp20$club=="FSV Mainz 05"
sum(temp20$club=="FSV Mainz 05")
sum(temp20$club=="1. FSV Mainz 05")
sum(temp20$club=="1. FC NÃ¼rnberg")
sum(temp20$club=="VitÃ³ria GuimarÃ£es")
sum(temp20$club=="Standard de LiÃ¨ge")
sum(temp20$club=="1. FC Kaiserslautern")
sum(temp20$club=="FCSB (Steaua)")
temp20 <- temp20[,-(c(2,26,27,31))]
match(c(1,2,3), c(1,2,3,4,5,6,1,2,3,4,5,6)
)
?join
heads(tempclub)
head(tempclub)
names(tempclub) <- c(club, url())
names(tempclub) <- c(club, url)
names(tempclub) <- c("club", "url")
names(tempclub)
temp20temp <- merge(x=temp20, y=tempclub, by="club",all=T)
head(temp20temp)
View(temp20temp)
View(temp20temp)
sum(is.na(tempclub$url))
temp20temp <- full_join(temp20,tempclub)
View(temp20temp)
View(temp20temp)
View(temp20)
View(temp20)
temp20 <- read.csv("players_20.csv", header = T)
temp20 <- temp20[,-(79:104)]
temp20 <- temp20[,-(c(2,26,27,31))]
str(temp20$club)
str(tempclub$club)
?full_join
temp20temp <- merge(x=temp20, y=tempclub, by="club",all.x=T)
View(temp20temp)
View(temp20temp)
temp20temp <- merge(x=temp20, y=tempclub, by="club",all=T)
heads(temp20temp$url)
head(temp20temp$url)
(temp20temp$url)
names(templeague)
temp20temp <- merge(x=temp20temp, y=templeague, by="url",all=T)
View(temp20)
View(temp20)
temp20 <- merge(x=temp20, y=tempclub, by="club",all=T)
temp20 <- merge(x=temp20, y=templeague, by="url",all=T)
temp20 <- temp20[,-1]
names(temp20)
# which(names(temp20)=="ls")
rewrite <- function(dataset) {
dataset <- dataset[,-(79:104)]
dataset <- dataset[,-(c(2,26,27,31))]
dataset <- merge(x=dataset, y=tempclub, by="club",all=T)
dataset <- merge(x=dataset, y=templeague, by="url",all=T)
dataset <- dataset[,-1]
}
rm(list = ls())
temp15 <- read.csv("players_15.csv", header = T)
temp16 <- read.csv("players_16.csv", header = T)
temp17 <- read.csv("players_17.csv", header = T)
temp18 <- read.csv("players_18.csv", header = T)
temp19 <- read.csv("players_19.csv", header = T)
temp20 <- read.csv("players_20.csv", header = T)
templeague <- read.csv("teams_and_leagues.csv", header = T)
tempclub <- read.csv("club_id.csv", header = T)
# which(names(temp20)=="ls")
rewrite <- function(dataset) {
dataset <- dataset[,-(79:104)]
dataset <- dataset[,-(c(2,26,27,31))]
dataset <- merge(x=dataset, y=tempclub, by="club",all=T)
dataset <- merge(x=dataset, y=templeague, by="url",all=T)
dataset <- dataset[,-1]
}
rewrite(temp20)
# which(names(temp20)=="ls")
club <- "club"
url <- "url"
rewrite <- function(dataset, club, url) {
dataset <- dataset[,-(79:104)]
dataset <- dataset[,-(c(2,26,27,31))]
dataset <- merge(x=dataset, y=tempclub, by=club ,all=T)
dataset <- merge(x=dataset, y=templeague, by=url ,all=T)
dataset <- dataset[,-1]
}
rewrite(temp20)
rewrite(temp20, club, url)
temp20 <- rewrite(temp20, club, url)
rewrite <- function(dataset, club, url) {
dataset <- dataset[,-(79:104)]
dataset <- dataset[,-(c(2,26,27,31))]
dataset <- merge(x=dataset, y=tempclub, by=club ,all=T)
dataset <- merge(x=dataset, y=templeague, by=url ,all=T)
dataset <- dataset[,-1]
return(dataset)
}
temp20 <- rewrite(temp20, club, url)
rewrite <- function(dataset, tempclub, templeague, club, url) {
dataset <- dataset[,-(79:104)]
dataset <- dataset[,-(c(2,26,27,31))]
dataset <- merge(x=dataset, y=tempclub, by=club ,all=T)
dataset <- merge(x=dataset, y=templeague, by=url ,all=T)
dataset <- dataset[,-1]
return(dataset)
}
temp20 <- rewrite(temp20, tempclub, templeague, club, url)
rewrite <- function(dataset, tempclu, templeagu, club, url) {
dataset <- dataset[,-(79:104)]
dataset <- dataset[,-(c(2,26,27,31))]
dataset <- merge(x=dataset, y=tempclu, by="club" ,all=T)
dataset <- merge(x=dataset, y=templeagu, by="url" ,all=T)
dataset <- dataset[,-1]
return(dataset)
}
rewrite <- function(dataset, tempclu, templeagu) {
dataset <- dataset[,-(79:104)]
dataset <- dataset[,-(c(2,26,27,31))]
dataset <- merge(x=dataset, y=tempclu, by="club" ,all=T)
dataset <- merge(x=dataset, y=templeagu, by="url" ,all=T)
dataset <- dataset[,-1]
return(dataset)
}
temp20 <- rewrite(temp20, tempclub, templeague)
rewrite <- function(dataset, tempclu, templeagu) {
dataset <- dataset[,-(79:104)]
dataset <- dataset[,-(c(2,26,27,31))]
dataset <- merge(x=dataset, y=tempclu, by="club" ,all=T)
dataset <- merge(x=dataset, y=templeagu, by="url" ,all=T)
dataset <- dataset[,-1]
return(dataset)
}
temp20 <- rewrite(temp20, tempclub, templeague)
temp20 <- temp20[,-(79:104)]
temp20 <- temp20[,-(c(2,26,27,31))]
temp20 <- merge(x=temp20, y=tempclub, by="club",all=T)
temp20 <- merge(x=temp20, y=templeague, by="url",all=T)
temp20 <- temp20[,-1]
temp19 <- temp19[,-(79:104)]
temp19 <- temp19[,-(c(2,26,27,31))]
temp19 <- merge(x=temp19, y=tempclub, by="club",all=T)
temp19 <- merge(x=temp19, y=templeague, by="url",all=T)
temp19 <- temp19[,-1]
temp18 <- temp18[,-(79:104)]
temp18 <- temp18[,-(c(2,26,27,31))]
temp18 <- merge(x=temp18, y=tempclub, by="club",all=T)
temp18 <- merge(x=temp18, y=templeague, by="url",all=T)
temp18 <- temp18[,-1]
temp17 <- temp17[,-(79:104)]
temp17 <- temp17[,-(c(2,26,27,31))]
temp17 <- merge(x=temp17, y=tempclub, by="club",all=T)
temp17 <- merge(x=temp17, y=templeague, by="url",all=T)
temp17 <- temp17[,-1]
temp16 <- temp16[,-(79:104)]
temp16 <- temp16[,-(c(2,26,27,31))]
temp16 <- merge(x=temp16, y=tempclub, by="club",all=T)
temp16 <- merge(x=temp16, y=templeague, by="url",all=T)
temp16 <- temp16[,-1]
temp15 <- temp15[,-(79:104)]
temp15 <- temp15[,-(c(2,26,27,31))]
temp15 <- merge(x=temp15, y=tempclub, by="club",all=T)
temp15 <- merge(x=temp15, y=templeague, by="url",all=T)
temp15 <- temp15[,-1]
names(tempclub)
names(tempclub) <- c("club", "url")
rm(list = ls())
temp15 <- read.csv("players_15.csv", header = T)
temp16 <- read.csv("players_16.csv", header = T)
temp17 <- read.csv("players_17.csv", header = T)
temp18 <- read.csv("players_18.csv", header = T)
temp19 <- read.csv("players_19.csv", header = T)
temp20 <- read.csv("players_20.csv", header = T)
templeague <- read.csv("teams_and_leagues.csv", header = T)
tempclub <- read.csv("club_id.csv", header = T)
names(tempclub) <- c("club", "url")
temp20 <- temp20[,-(79:104)]
temp20 <- temp20[,-(c(2,26,27,31))]
temp20 <- merge(x=temp20, y=tempclub, by="club",all=T)
temp20 <- merge(x=temp20, y=templeague, by="url",all=T)
temp20 <- temp20[,-1]
temp19 <- temp19[,-(79:104)]
temp19 <- temp19[,-(c(2,26,27,31))]
temp19 <- merge(x=temp19, y=tempclub, by="club",all=T)
temp19 <- merge(x=temp19, y=templeague, by="url",all=T)
temp19 <- temp19[,-1]
temp18 <- temp18[,-(79:104)]
temp18 <- temp18[,-(c(2,26,27,31))]
temp18 <- merge(x=temp18, y=tempclub, by="club",all=T)
temp18 <- merge(x=temp18, y=templeague, by="url",all=T)
temp18 <- temp18[,-1]
temp17 <- temp17[,-(79:104)]
temp17 <- temp17[,-(c(2,26,27,31))]
temp17 <- merge(x=temp17, y=tempclub, by="club",all=T)
temp17 <- merge(x=temp17, y=templeague, by="url",all=T)
temp17 <- temp17[,-1]
temp16 <- temp16[,-(79:104)]
temp16 <- temp16[,-(c(2,26,27,31))]
temp16 <- merge(x=temp16, y=tempclub, by="club",all=T)
temp16 <- merge(x=temp16, y=templeague, by="url",all=T)
temp16 <- temp16[,-1]
temp15 <- temp15[,-(79:104)]
temp15 <- temp15[,-(c(2,26,27,31))]
temp15 <- merge(x=temp15, y=tempclub, by="club",all=T)
temp15 <- merge(x=temp15, y=templeague, by="url",all=T)
temp15 <- temp15[,-1]
write.csv(temp20, "players_20_1.csv")
write.csv(temp20, "players_19_1.csv")
write.csv(temp20, "players_18_1.csv")
write.csv(temp20, "players_17_1.csv")
write.csv(temp20, "players_16_1.csv")
write.csv(temp20, "players_15_1.csv")
write.csv(temp20, "players_20_1.csv")
write.csv(temp19, "players_19_1.csv")
write.csv(temp18, "players_18_1.csv")
write.csv(temp17, "players_17_1.csv")
write.csv(temp16, "players_16_1.csv")
write.csv(temp15, "players_15_1.csv")
View(temp20)
View(temp20)
plot(temp20$nationality,temp20$club)
plot(temp20$nationality,temp20$club)
fifa20 <- temp20 #recover backup
aggregate(fifa20$overall, list(fifa20$club), mean)
?aggregate
club_avg <- aggregate(fifa20$overall, list(fifa20$club), mean)
names(club_avg)
names(club_avg) <- c("club", "avg_overall")
temp20 <- merge(x=temp20, y=club_avg, by="club",all=T)
temp20 <- fifa20
fifa20 <- merge(x=fifa20, y=club_avg, by="club",all=T)
head(fifa20)
?include
?grepl
fifa20 <- fifa20[!(grepl(fifa20$team_position,"GK") || grepl(fifa20$nation_position,"GK")),]
fifa20 <- fifa20[!(grepl(fifa20$team_position,"GK", fixed = T) || grepl(fifa20$nation_position,"GK",fixed=T)),]
grepl(fifa20$team_position,"GK", fixed = T)
fifa20 <- fifa20[!(grepl("GK",fifa20$team_position,fixed = T) || grepl("GK",fifa20$nation_position,fixed=T)),]
View(fifa20)
(grepl("GK",fifa20$team_position,fixed = T)
)
fifa20 <- temp20 #recover backup
club_avg <- aggregate(fifa20$overall, list(fifa20$club), mean)
names(club_avg) <- c("club", "avg_overall")
fifa20 <- merge(x=fifa20, y=club_avg, by="club",all=T)
fifa20 <- fifa20[!(grepl("GK",fifa20$team_position,fixed = T) || grepl("GK",fifa20$nation_position,fixed=T)),]
!(grepl("GK",fifa20$team_position,fixed = T) || grepl("GK",fifa20$nation_position,fixed=T))
grepl("GK",fifa20$nation_position,fixed=T)
grepl("GK",fifa20$team_position,fixed = T) || grepl("GK",fifa20$nation_position,fixed=T)
fifa20 <- fifa20[!(grepl("GK",fifa20$team_position,fixed = T) | grepl("GK",fifa20$nation_position,fixed=T)),]
fifa20 <- temp20 #recover backup
club_avg <- aggregate(fifa20$overall, list(fifa20$club), mean)
names(club_avg) <- c("club", "avg_overall")
fifa20 <- merge(x=fifa20, y=club_avg, by="club",all=T)
fifa20 <- fifa20[!(grepl("GK",fifa20$team_position,fixed = T) |
grepl("GK",fifa20$nation_position,fixed=T) |
grepl("GK",fifa20$player_position,fixed=T)),]
fifa20 <- temp20 #recover backup
club_avg <- aggregate(fifa20$overall, list(fifa20$club), mean)
names(club_avg) <- c("club", "avg_overall")
fifa20 <- merge(x=fifa20, y=club_avg, by="club",all=T)
fifa20 <- fifa20[!(grepl("GK",fifa20$team_position,fixed = T) |
grepl("GK",fifa20$nation_position,fixed=T) |
grepl("GK",fifa20$player_positions,fixed=T)),]
names(fifa20)
# split data into train & test
set.seed(987)
train <- sample(1:nrow(fifa20), nrow(fifa20)*0.8)  # 80% for training
# get which variables have <2 factor levels
get <- which(sapply(fifa20[train,], function(x) length(unique(x))<2))
# exclude encounter_id, patient_nbr, weight, payer_code, diag_1, daig_2,
# diag_3, readmitted, isReadmitted
# Reason: unrelated to question OR too many factors
# also exclude acetohexamide, tolbutamide, troglitazone,
# glimepiride.pioglitazone, metformin.rosiglitazone
# Reason: causes "<2 level" error from sampling
varnames <- paste(c(names(fifa20
[,-c(get)])), collapse = "+")
formula <- paste(c("avg_overall",varnames), collapse = "~")
which(names(fifa20)=="gk_diving")
# delete players >= 25 yrs old
fifa20 <- fifa20[!(fifa20$age >= 25),]
fifa20 <- temp20 #recover backup
# calculate average of Overall of each Club
club_avg <- aggregate(fifa20$overall, list(fifa20$club), mean)
names(club_avg) <- c("club", "avg_overall")
fifa20 <- merge(x=fifa20, y=club_avg, by="club",all=T)
# delete goalkeepers
fifa20 <- fifa20[!(grepl("GK",fifa20$team_position,fixed = T) |
grepl("GK",fifa20$nation_position,fixed=T) |
grepl("GK",fifa20$player_positions,fixed=T)),]
# delete players >= 25 yrs old
fifa20 <- fifa20[!(fifa20$age >= 25),]
# split data into train & test
set.seed(987)
train <- sample(1:nrow(fifa20), nrow(fifa20)*0.8)  # 80% for training
# get which variables have <2 factor levels
get <- which(sapply(fifa20[train,], function(x) length(unique(x))<2))
# exclude encounter_id, patient_nbr, weight, payer_code, diag_1, daig_2,
# diag_3, readmitted, isReadmitted
# Reason: unrelated to question OR too many factors
# also exclude acetohexamide, tolbutamide, troglitazone,
# glimepiride.pioglitazone, metformin.rosiglitazone
# Reason: causes "<2 level" error from sampling
varnames <- paste(c(names(fifa20
[,-c(get,1,2,3,4,6,23,25,34:39,40,70:74)])), collapse = "+")
formula <- paste(c("avg_overall",varnames), collapse = "~")
# Model 1: OLS
lm.1 <- lm(formula, data = fifa20[train,])
# exclude encounter_id, patient_nbr, weight, payer_code, diag_1, daig_2,
# diag_3, readmitted, isReadmitted
# Reason: unrelated to question OR too many factors
# also exclude acetohexamide, tolbutamide, troglitazone,
# glimepiride.pioglitazone, metformin.rosiglitazone
# Reason: causes "<2 level" error from sampling
varnames <- paste(c(names(fifa20
[,-c(get,1,2,3,4,6,23,25,34:39,40,70:74,75,76)])), collapse = "+")
formula <- paste(c("avg_overall",varnames), collapse = "~")
# Model 1: OLS
lm.1 <- lm(formula, data = fifa20[train,])
summary(lm.1)
# exclude encounter_id, patient_nbr, weight, payer_code, diag_1, daig_2,
# diag_3, readmitted, isReadmitted
# Reason: unrelated to question OR too many factors
# also exclude acetohexamide, tolbutamide, troglitazone,
# glimepiride.pioglitazone, metformin.rosiglitazone
# Reason: causes "<2 level" error from sampling
varnames <- paste(c(names(fifa20
[,-c(get,1,2,3,4,6,23,25,34:39,40,70:74,75,76
,9,14)])), collapse = "+")
formula <- paste(c("avg_overall",varnames), collapse = "~")
# Model 1: OLS
lm.1 <- lm(formula, data = fifa20[train,])
#cat("\nDo OLS on training set using selected variables from LASSO\n")
summary(lm.1)$coefficients[,1]
summary(lm.1)
#cat("\nDo OLS on training set using selected variables from LASSO\n")
summary(lm.1)$coefficients[,1]
# prediction on test data to predict patient readmission or not
prob.lm.1 <- predict(lm.1, newdata = fifa20[-train,])
# exclude encounter_id, patient_nbr, weight, payer_code, diag_1, daig_2,
# diag_3, readmitted, isReadmitted
# Reason: unrelated to question OR too many factors
# also exclude acetohexamide, tolbutamide, troglitazone,
# glimepiride.pioglitazone, metformin.rosiglitazone
# Reason: causes "<2 level" error from sampling
varnames <- paste(c(names(fifa20
[,-c(get,1,2,3,4,6,23,25,34:39,40,70:74,75,76
,9,14,24)])), collapse = "+")
formula <- paste(c("avg_overall",varnames), collapse = "~")
# Model 1: OLS
lm.1 <- lm(formula, data = fifa20[train,])
# prediction on test data to predict patient readmission or not
prob.lm.1 <- predict(lm.1, newdata = fifa20[-train,])
summary(prob.lm.1)
length(na.omit(prob.lm.1)) # count remaining observations
# test error
mse.1 <- mean((prob.lm.1-fifa20[-train,]$avg_overall)^2, na.rm=T)
#cat("\nMSE\n")
mse.1
# exclude encounter_id, patient_nbr, weight, payer_code, diag_1, daig_2,
# diag_3, readmitted, isReadmitted
# Reason: unrelated to question OR too many factors
# also exclude acetohexamide, tolbutamide, troglitazone,
# glimepiride.pioglitazone, metformin.rosiglitazone
# Reason: causes "<2 level" error from sampling
varnames <- paste(c(names(fifa20
[,-c(get,1,2,3,4,6,23,25,34:39,40,70:74,75,76 #must get rid of
,9,10,14,24)])), collapse = "+") #alternatives to get rid of
formula <- paste(c("avg_overall",varnames), collapse = "~")
# Model 1: OLS
lm.1 <- lm(formula, data = fifa20[train,])
summary(lm.1)
# exclude encounter_id, patient_nbr, weight, payer_code, diag_1, daig_2,
# diag_3, readmitted, isReadmitted
# Reason: unrelated to question OR too many factors
# also exclude acetohexamide, tolbutamide, troglitazone,
# glimepiride.pioglitazone, metformin.rosiglitazone
# Reason: causes "<2 level" error from sampling
varnames <- paste(c(names(fifa20
[,-c(get,1,2,3,4,6,21,23,25,34:39,40,70:74,75,76 #must get rid of
,9,10,14,24)])), collapse = "+") #alternatives to get rid of
formula <- paste(c("avg_overall",varnames), collapse = "~")
# Model 1: OLS
lm.1 <- lm(formula, data = fifa20[train,])
summary(lm.1)
#--------------------------------------------------------------------
# Model 2: OLS with feature selected by group
lm.2 <- lm(avg_overall ~ potential + value_eur + wage_eur + contract_valid_until
+ skill_moves + movement_reactions + mentality_penalties, data = fifa20[train,])
# prediction on test data to predict patient readmission or not
prob.lm.1 <- predict(lm.1, newdata = fifa20[-train,]) # team position throws errors
#--------------------------------------------------------------------
# Model 2: OLS with feature selected by group
lm.2 <- lm(avg_overall ~ potential + value_eur + wage_eur + contract_valid_until
+ skill_moves + movement_reactions + mentality_penalties, data = fifa20[train,])
summary(lm.2)
# prediction on test data to predict patient readmission or not
prob.lm.2 <- predict(lm.2, newdata = fifa20[-train,]) # team position throws errors
summary(prob.lm.2)
length(na.omit(prob.lm.2)) # count remaining observations
# test error
mse.2 <- mean((prob.lm.2-fifa20[-train,]$avg_overall)^2, na.rm=T)
#cat("\nMSE\n")
mse.2
summary(fifa20$avg_overall)
hist(fifa20$avg_overall)
#--------------------------------------------------------------------
# Model 3: LASSO then OLS
lasso.1 <- rlasso(formula , data = fifa20[train,], post = F)
#cat("Do LASSO on training set\n")
summary(lasso.1, all = F)
# get ceoffs that matter and make OLS formula
x <- which(coef(lasso.1)[-1]!=0)
#cat("\nCount and Kept Significant Variables by LASSO\nCount: ")
length(x)
#x
x <- paste(names(x), collapse = "+")
formula <- paste(c("avg_overall", x), collapse = " ~ ")
formula
# OLS regression on training set
olsLasso.1 <- lm(formula2, data = fifa20[train,])
formula2 <- paste(c("avg_overall", x), collapse = " ~ ")
# OLS regression on training set
olsLasso.1 <- lm(formula2, data = fifa20[train,])
# name all extra variables created from doing OLS
fifa20$preferred_footRight <- fifa20$preferred_foot == "Right"
# OLS regression on training set
olsLasso.1 <- lm(formula2, data = fifa20[train,])
fifa20$nation_positionRB <- fifa20$nation_position == "RB"
# OLS regression on training set
olsLasso.1 <- lm(formula2, data = fifa20[train,])
#cat("\nDo OLS on training set using selected variables from LASSO\n")
summary(olsLasso.1)$coefficients[,1]
summary(olsLasso.1)
#cat("\nDo OLS on training set using selected variables from LASSO\n")
summary(olsLasso.1)$coefficients[,1]
# prediction on test data to predict patient readmission or not
prob.lasso.1 <- predict(olsLasso.1, newdata = fifa20[-train,])
#cat("Predict on test set\n")
summary(prob.lasso.1)
#cat("\nCount remaining observations\n")
length(na.omit(prob.lasso.1)) # count remaining observations
# test error
mse.3 <- mean((prob.lasso.1-fifa20[-train,]$avg_overall)^2, na.rm=T)
#cat("\nMSE\n")
mse.3
