}
?rbind
(choose(5,2) + choose(3,1)*choose(3,1))/choose(11,2)
(choose(5,2) + choose(3,1)*choose(3,1))
choose(11,2)
choose(5,1)*choose(3,1)
choose(3,2)
f <- 0
v <- c(-1000,200,200,200)
for (i in 0:3) {
f <- f+v[i+1]/(1.12)^i
}
f <- 0
v <- c(-1000,200,200,200)
for (i in 0:3) {
f <- f+v[i+1]/(1.12)^i
print(f)
}
f <- 0
v <- c(-1000,200,200,200)
for (i in 0:3) {
f <- f+v[i+1]/(1.12)^i
print(c(f,v[i+1],1.12^i))
}
f <- 0
v <- c(-5000,2000,2000,2000)
for (i in 0:3) {
f <- f+v[i+1]/(1.12)^i
print(c(f,v[i+1],1.12^i))
}
f <- 0
v <- c(-5000,2000,2000,2000)
for (i in 0:3) {
f <- f+v[i+1]/(1.12)^(i+1)
print(c(f,v[i+1],1.12^(i+1)))
}
f <- 0
v <- c(-5000,2000,2000,2000,0)
for (i in 0:4) {
f <- f+v[i+1]/(1.12)^(i+1)
print(c(f,v[i+1],1.12^(i+1)))
}
f <- 0
v <- c(-5000,2000,2000,2000,0)
for (i in 0:4) {
f <- f+v[i+1]/(1.05)^(i)
print(c(f,v[i+1],1.12^(i)))
}
f <- 0
v <- c(-1000,200,200,200,0)
for (i in 0:4) {
f <- f+v[i+1]/(1.05)^(i)
print(c(f,v[i+1],1.12^(i)))
}
f <- 0
v <- c(-1000,200,200,200,0)
for (i in 0:4) {
f <- f+v[i+1]/(1.12)^(i)
print(c(f,v[i+1],1.12^(i)))
}
.12/1.2+.2
1000000/(1.02^50)
1000000/(1.09^50)
1000000/(1.01^50)
1000000/(1.05^50)
(608038.8+13448.54)/2
.2/(1.07^100)
exp(-7)*.2
1+1/.08
12.5/1.08^20
12.5-2.681853
150/50
250/100
250/150
npv <- function(x, i) {
f <- 0
for (j in 0:length(x)) {
f <- f+x[j+1]/(1 + i/100)^(j)
}
}
a <- c(-3000,0,3434.70)
b <- c(-3000,3270,0)
print(npv(a,3))
print(npv(b,3))
print(npv(a,7))
print(npv(b,7))
a <- c(-3000,0,3434.70)
b <- c(-3000,3270,0)
print(npv(a,3))
npv <- function(x, i) {
f <- 0
for (j in 0:length(x)) {
f <- f+x[j+1]/(1 + i/100)^(j)
}
print(f)
}
a <- c(-3000,0,3434.70)
b <- c(-3000,3270,0)
npv <- function(x, i) {
f <- 0
for (j in 0:length(x)) {
f <- f+x[j+1]/(1 + i/100)^(j)
}
print(f)
}
a <- c(-3000,0,3434.70)
b <- c(-3000,3270,0)
npv(a,3))
npv <- function(x, i) {
f <- 0
for (j in 0:length(x)) {
f <- f+x[j+1]/(1 + i/100)^(j)
}
print(f)
}
a <- c(-3000,0,3434.70)
b <- c(-3000,3270,0)
npv(a,3)
npv(b,3)
npv(a,7)
npv(b,7)
npv(a,3)
npv <- function(x, i) {
f <- 0
for (j in 0:length(x)-1) {
f <- f+x[j+1]/(1 + i/100)^(j)
}
print(f)
}
a <- c(-3000,0,3434.70)
b <- c(-3000,3270,0)
npv(a,3)
npv(b,3)
npv(a,7)
npv(b,7)
v <- c(-1000,200,200,200,0)
length(v)
npv <- function(x, i) {
f <- 0
for (j in 0:length(x)-1) {
f <- f+x[j+1]/(1 + i/100)^(j)
}
return(f)
}
a <- c(-3000,0,3434.70)
b <- c(-3000,3270,0)
npv(a,3)
f <- 0
v <- c(-1000,200,200,200,0)
for (i in 0:4) {
f <- f+v[i+1]/(1.12)^(i)
print(c(f))
}
npv(v,12)
npv <- function(x, i) {
f <- 0
for (j in 0:length(x)-1) {
f <- f+x[j+1]/(1 + i/100)^(j)
print(f)
}
return(f)
}
npv(v,12)
npv <- function(x, r) {
f <- 0
for (j in 0:(length(x)-1)) {
f <- f + x[j+1]/(1 + r/100)^(j)
print(f)
}
return(f)
}
npv(v,12)
for (i in 0:4) {
f <- f+v[i+1]/(1.12)^(i)
print(c(f))
}
f <- 0
v <- c(-1000,200,200,200,0)
for (i in 0:4) {
f <- f+v[i+1]/(1.12)^(i)
print(c(f))
}
npv <- function(x, r) {
f <- 0
for (j in 0:(length(x)-1)) {
f <- f + x[j+1]/(1 + r/100)^(j)
print(f)
}
}
f <- 0
v <- c(-1000,200,200,200,0)
for (i in 0:4) {
f <- f+v[i+1]/(1.12)^(i)
print(c(f))
}
npv(v,12)
npv <- function(x, r) {
f <- 0
for (j in 0:(length(x)-1)) {
f <- f + x[j+1]/(1 + r/100)^(j)
print(f)
}
}
a <- c(-3000,0,3434.70)
b <- c(-3000,3270,0)
npv(a,3)
npv(b,3)
npv(a,7)
npv(b,7)
npv(a,7)
npv(b,7)
npv <- function(x, r) {
f <- 0
for (j in 0:(length(x)-1)) {
f <- f + x[j+1]/(1 + r/100)^(j)
}
}
npv(a,7)
npv(b,7)
print(npv(a,7))
print(npv(b,7))
npv <- function(x, r) {
f <- 0
for (j in 0:(length(x)-1)) {
f <- f + x[j+1]/(1 + r/100)^(j)
}
return(f)
}
(npv(a,7))
(npv(b,7))
c <- c(-1000,2900,-2000)
round(npv(c,13))
round(npv(c,77))
130*11/10+110*29/20
7800*2+500-200
6800+3500
8000+7500
-600+9000
7800*4+500-100
6800*4+3000+250
16000+5000+5000/4
-1200+18000/4
j <- c(7800,500,-400)
k <- c(6800,3000,1000)
l <- c(4000,5000,5000)
m <- c(-300,0,18000)
k <- c(1.2,1,1)
j*k
sum(j*k)
k <- c(6800,3000,1000)
c <- c(1.2,1,1)
sum(cj)
sum(c*j)
?rank
for (ii in c(j,k,l,m)) {
sum(c*ii)
}
for (ii in c(j,k,l,m)) {
print(sum(c*ii))
}
print(sum(c*ii))
vec <- c(j,k,l,m)
vec <- list(j,k,l,m)
length(vec)
for (ii in 1:length(vec)) {
}
for (ii in 1:length(vec)) {
print(sum(c*vec[ii]))
}
c*vec[ii]
vec[[ii]]
for (ii in 1:length(vec)) {
print(sum(c*vec[[ii]]))
}
c <- c(2,1,1)
for (ii in 1:length(vec)) {
print(sum(c*vec[[ii]]))
}
(70+70+65+64+70)
339+241
580+320
320/350
300/350
m <- as.table(matrix(c(0,2000,10,10,5000,50,20,1000,20,30,0,12)))
m
m <- as.table(matrix(c(0,2000,10,10,5000,50,20,1000,20,30,0,12),nrow = 3))
m
m$A
`names<-`(m,c("distance","visits","population"))
m
names(m) <- c("distance","visits","population")
m
colnames(m) <- c("distance","visits","population")
colnames(m) <- c("town","distance","visits","population")
m
m <- as.table(matrix(c(0,2000,10,10,5000,50,20,1000,20,30,0,12),nrow = 4))
colnames(m) <- c("town","distance","visits","population")
colnames(m) <- c("distance","visits","population")
m
m$vpp <- m$visits/m$population
m$visits
m <- matrix(c(0,2000,10,10,5000,50,20,1000,20,30,0,12),nrow = 4)
colnames(m) <- c("distance","visits","population")
m$vpp <- m$visits/m$population
m <- as.data.table(matrix(c(0,2000,10,10,5000,50,20,1000,20,30,0,12),nrow = 4))
m <- as.data.frame(matrix(c(0,2000,10,10,5000,50,20,1000,20,30,0,12),nrow = 4))
m
colnames(m) <- c("distance","visits","population")
m$vpp <- m$visits/m$population
m
m$cp0 <- m$distance*1
m
m <- as.data.frame(matrix(c(0,2000,10,10,5000,50,20,1000,20,30,0,12),ncol=3))
colnames(m) <- c("distance","visits","population")
m
?matrix
m <- as.data.frame(matrix(c(0,2000,10,10,5000,50,20,1000,20,30,0,12),nrow = 4,byrow = T))
m
m <- as.data.frame(matrix(c(0,2000,10,10,5000,50,20,1000,20,30,0,12),nrow = 4,byrow = T))
colnames(m) <- c("distance","visits","population")
m$vpp <- m$visits/m$population
m$cp0 <- m$distance*1
m
m$cp10 <- m$cp0+10
m$cp20 <- m$cp0+20
m
m$cp30 <- m$cp0+30
m
25*500+15*3000+5*4500
exp(-3)
1/3
1/4
m <- as.data.frame(matrix(c(259,2,3.5,365.5,86,.5,25.5,17,3,2013,122,1,25,50,2.5,1650,150,2.5,1596,190,4),ncol = 3,byrow = T))
colnames(m) <- c("cost","pop","reducedRisk")
m
rownames(m) <- c("A","B","C","D","E","F","G")
m
m$stat <- m$pop*m$reducedRisk
m$statlife <- m$pop*m$reducedRisk
m <- as.data.frame(matrix(c(259,2,3.5,365.5,86,.5,25.5,17,3,2013,122,1,25,50,2.5,1650,150,2.5,1596,190,4),ncol = 3,byrow = T))
colnames(m) <- c("cost","pop","reducedRisk")
rownames(m) <- c("A","B","C","D","E","F","G")
m$statlife <- m$pop*m$reducedRisk
m$costperlife <- m$cost/m$statlife
m
sort(rownames(m$costperlife))
sort((m))
sort((m$costperlife))
rownames(m)[sort((m$costperlife))]
rownames(m)[sort(m$costperlife)]
rownames(m)[c(1,2,3)]
rownames(m)[m$costperlife==sort(m$costperlife)]
m$costperlife==sort(m$costperlife)
?whcih
?which
rownames(m)
m$costperlife==sort(m$costperlife)
?sort
m
sort(m$costperlife)
1596+25.5+25
125+51+760
1646.5+1650
936+375
1311/936*100
1646.5/936
3296.5/1311
750/0.0001
7.5*20
13.5-21.7*0.118
132.52-5-3-6-12-3.41
8.5*60  * 24 *365*log(2)/22
log(8.5*60  * 24 *365*log(2)/22)/(log(2)/22)
log(2)/22
log(8.5*60  * 24 *365*log(2)/22 / (200/(log(2)/22)))/(log(2)/22)
j <- c(7800,500,-400)
k <- c(6800,3000,1000)
l <- c(4000,5000,5000)
m <- c(-300,0,18000)
c <- c(2,1,1)
vec <- list(j,k,l,m)
library(installr)
updateR()
updateR(TRUE)
d
library(reprtree) #plot decision tree
install.packages(reprtree)
install.packages("reprtree")
?Rcpp
??Rcpp
x+y
x <- c(1,3,2,5)
x # print x
y = c(1,4,3)
y # print y
length(x) # 4
length(y) # 3
x+y
x <- c(1,6,2)
x+y
ls()
rm(x,y)
x <- matrix(data = c(1,2,3,4), nrow = 2, rcol=2)
x
x <- matrix(data = c(1,2,3,4), nrow = 2, rcol=2)
x <- matrix(data = c(1,2,3,4), nrow = 2, ncol=2)
x
matrix(data = c(1,2,3,4), nrow = 2, ncol=2, byrow = T)
sqrt(x)
x^2 # element wise squaring
x <- rnorm (50) # std norm, n=50
y <- x + rnorm (50, mean=50, sd=0.1) # make new vars~normal dist.
cor(x,y)
set.seed(123)
rnorm(40)
set.seed(890) # different!
rnorm(40)
x <- rnorm(100)
y <- rnorm(100)
plot(x,y, main = " x vs y", xlab = "x axis", ylab = "y axis")
# Brian Kang
# Econ 487: HW1
setwd("C:/Users/slexi/Documents/UW_ECON/ECON483")
plot(x,y, main = " x vs y",
xlab = "x axis", ylab = "y axis",
col = "red")
jpeg("hw1.jpg")
plot(x,y, main = " x vs y",
xlab = "x axis", ylab = "y axis",
col = "red")
dev.off()
x <- seq(1,10)
y <- 1:10
x==y # true
seq(0,1,length = 10)
?contour
x <- seq(-pi ,pi ,length = 50)
y <- x
f <- outer(x,y,function (x,y)cos(y)/(1+x^2))
contour(x,y,f)
contour(x,y,f,nlevels =45, add=T)
contour(x,y,f) # contour plot
contour(x,y,f,nlevels =45, add=T)
fa <- (f-t(f))/2
contour(x,y,fa,nlevels =15)
f
t(f)
f
head(f)
summary(f)
?outer
source('~/UW_ECON/ECON483/hw1.R', echo=TRUE)
image(x,y,fa)
persp(x,y,fa)
persp(x,y,fa ,theta =30)
persp(x,y,fa ,theta =30, phi =20)
persp(x,y,fa ,theta =30, phi =70)
A[2,3] # 10
A <- matrix(1:16, 4,4)
A
A[2,3] # 10
A[c(1,3), c(2,4)] # row 1,3 and column 2,4
A[1:3, 2:4] # row 1 to 3, column 2 to 4
A[-1:2 ,] # everything BUT row 1,2
A[-(1:2) ,] # everything BUT row 1,2
Auto <- read.table ("Auto.data ")
install.packages("ISLR")
library("ISLR")
Auto <- read.table ("Auto.data")
?read/table
?read.table
library("ISLR")
Auto <- read.table("Auto.data", path = )
Auto <- read.table("Auto.data")
library(ISLR)
Auto <- read.table("Auto.data")
head(Auto)
fix(Auto)
#fix(Auto) # view data
dim(Auto)
Auto <- na.omit(Auto)
dim(Auto)
names(Auto) # variable names
plot(cylinders, mpg, data = Auto)
plot(cylinders, mpg, data = Auto)
plot(Auto$cylinders, mpg, data = Auto)
plot(Auto$cylinders, Auto$mpg)
plot(as.factor(Auto$cylinders), Auto$mpg)
plot(Auto$cylinders, Auto$mpg)
plot(as.factor(Auto$cylinders), Auto$mpg)
Auto$cylinders
str(Auto)
plot(Auto$cylinders, Auto$mpg)
cylinders <- as.factor(cylinders)
#plot(as.factor(Auto$cylinders), Auto$mpg) # gives boxplot
attach(Auto) # make variable names as referable vectors
cylinders <- as.factor(cylinders)
#plot(cylinders , mpg)
plot(cylinders, mpg, col="red", varwidth=T, xlab="cylinders",
ylab ="MPG")
hist(mpg ,col =2, breaks =15)
pairs(Auto)
pairs(~ mpg + displacement + horsepower + weight +
acceleration, Auto) # scatterplot matrix of some pairs
jpeg(hw1.jpg)
pairs(~ mpg + displacement + horsepower + weight +
acceleration, Auto) # scatterplot matrix of some pairs
dev.off()
plot(horsepower, mpg)
identify (horsepower ,mpg ,name)
summary(Auto)
summary(mpg)
